<%= simple_form_for(@meal, html: { class: 'form-horizontal' }) do |f| %>

  <% if can?(:manage, @meal) %>

    <%= f.input :served_at, as: :datetime_picker,
      input_html: {data: {date_options: @min_date.present? ? {minDate: @min_date} : {}}} %>

    <%= f.input :location_id, collection: Location.by_name %>

  <% else %>

    <%= f.input :served_at do %>
      <%= @meal.served_at.to_formatted_s(:full_datetime) %>
    <% end %>

    <%= f.input :location_id do %>
      <%= @meal.location_name %>
    <% end %>

  <% end %>

  <div class="form-group text optional
    <%= @meal.errors['invitations'].present? ? "has-error" : "" %>">
    <label class="text optional col-sm-2 control-label" for="meal_invitations">Communities</label>
    <div class="boxes col-sm-6">
      <% @communities.each do |c| %>
        <% checked = community_invited?(@meal, c) %>
        <% disabled = disable_community_checkbox?(@meal, c) %>
        <%= check_box_tag("meal[community_boxes][#{c.id}]", "1", checked, disabled: disabled) %>
        <%= hidden_field_tag("meal[community_boxes][#{c.id}]", "1") if disabled %>
        <%= label_tag("meal[community_boxes][#{c.id}]", c.name) %>
        &nbsp;&nbsp;
      <% end %>
    </div>
    <% if @meal.errors['invitations'].present? %>
      <div class="help-block col-sm-6 col-sm-offset-2"><%= @meal.errors['invitations'].join %></div>
    <% end %>
  </div>

  <%= f.input :capacity, min: 1 %>

  <% if can?(:manage, @meal) %>
    <%= f.simple_fields_for :head_cook_assign, @meal.head_cook_assign do |head_cook| %>
      <%= render('head_cook_assign_fields', f: head_cook) %>
    <% end %>
  <% else %>
    <%= f.input :head_cook do %>
      <%= @meal.head_cook_name %>
    <% end %>
  <% end %>

  <% if can?(:manage, @meal) %>
    <%= f.simple_fields_for :asst_cook_assigns do |asst_cook| %>
      <%= render('asst_cook_assign_fields', f: asst_cook) %>
    <% end %>

    <!-- Can't use class="row" as it breaks cocoon -->
    <div class="links col-sm-10 col-sm-offset-2">
      <%= link_to_add_association 'Add Assistant Cook', f, :asst_cook_assigns %>
    </div>
  <% else %>
    <%= f.input :asst_cooks do %>
      <%= @meal.asst_cooks.blank? ? "[None]" : @meal.asst_cooks.map(&:name).join(", ") %>
    <% end %>
  <% end %>

  <% if can?(:manage, @meal) %>
    <%= f.simple_fields_for :cleaner_assigns do |cleaner| %>
      <%= render('cleaner_assign_fields', f: cleaner) %>
    <% end %>

    <div class="links col-sm-10 col-sm-offset-2">
      <%= link_to_add_association 'Add Cleaner', f, :cleaner_assigns %>
    </div>
  <% else %>
    <%= f.input :cleaners do %>
      <%= @meal.cleaners.blank? ? "[None]" : @meal.cleaners.map(&:name).join(", ") %>
    <% end %>
  <% end %>

  <%= f.input :title %>

  <% %w(entrees side kids dessert notes).each do |attrib| %>
    <%= f.input attrib %>
  <% end %>

  <div class="form-group text optional meal_allergens
    <%= @meal.errors['allergens'].present? ? "has-error" : "" %>">
    <label class="text optional col-sm-2 control-label" for="meal_allergens">Allergens</label>
    <div class="boxes col-sm-6">
      <% Meal::ALLERGENS.sort.each do |allergen| %>
        <div>
          <%= f.check_box("allergen_#{allergen}") %>
          <%= f.label("allergen_#{allergen}")%>
        </div>
      <% end %>
    </div>
    <% if @meal.errors['allergens'].present? %>
      <div class="help-block col-sm-6 col-sm-offset-2"><%= @meal.errors['allergens'].join %></div>
    <% end %>
  </div>

  <div class="row">
    <div class="form-actions col-sm-8">
      <%= f.button :submit, class: "pull-right btn-primary" %>
    </div>
  </div>

<% end %>
